<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        guA/x0cnywUpMxUAAAAASUVORK5CYII=
</value>
  </data>
</root>